<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="member">
	<select id="selectOneAsMemNo" parameterType="Member" resultType="Member">
		SELECT
			MEM_NO as memNo,
			MEM_PWD as memPwd,
			MEM_POSITION as memPosition,
			DEPT_CODE as deptCode,
			MEM_NAME as memName,
			MEM_BIRTH as memBirth,
			MEM_GENDER as memGender,
			MEM_ADDRESS as memAddress,
			MEM_PHONE as memPhone,
			MEM_TELL as memTell,
			MEM_EMAIL as memEmail,
			MEM_PROFILE as memProfile,
			MEM_HOLIDAY_COUNT as memHolidayCount,
			MEM_JOIN_DATE as memJoinDate,
			MEM_RESIGN_YN as memResignYN,
			MEM_RESIGN_DATE as memResigndate,
			MEM_DEL_YN as memDelYN,
			MEM_DEL_DATE as memDelDate,
			MEM_RIGHT_CODE as memRightCode
		FROM member
		WHERE m.MEM_NO=#{memNo}
	</select>
	
	<select id="loginMember" parameterType="Member" resultType="Member">
		SELECT
			m.MEM_NO as memNo,
			m.MEM_PWD as memPwd,
			m.MEM_POSITION as memPosition,
			m.DEPT_CODE as deptCode,
			m.MEM_NAME as memName,
			m.MEM_BIRTH as memBirth,
			m.MEM_GENDER as memGender,
			m.MEM_ADDRESS as memAddress,
			m.MEM_PHONE as memPhone,
			m.MEM_TELL as memTell,
			m.MEM_EMAIL as memEmail,
			m.MEM_PROFILE as memProfile,
			m.MEM_HOLIDAY_COUNT as memHolidayCount,
			m.MEM_JOIN_DATE as memJoinDate,
			m.MEM_RESIGN_YN as memResignYN,
			m.MEM_RESIGN_DATE as memResigndate,
			m.MEM_DEL_YN as memDelYN,
			m.MEM_DEL_DATE as memDelDate,
			m.MEM_RIGHT_CODE as memRightCode,
			d.DEPT_NAME as deptName
		FROM member m left join department d on(m.dept_code=d.dept_code)
		WHERE m.MEM_NO=#{memNo} and m.MEM_PWD=#{memPwd}
	</select>
	
	<!-- BY 다빈 - 관리자탭(인사관리) - 통합사원 목록 / 사원 총 수 -->
	<select id="allMemberCount" resultType="int">
		SELECT COUNT(*) AS MEM_ALL_COUNT FROM MEMBER WHERE MEM_DEL_YN='N' AND MEM_RESIGN_YN='N'
	</select>
	
	<!-- BY 다빈 - 관리자탭(인사관리) - 통합사원 목록 / 전사원 리스트 -->
	<select id="allMemberList" parameterType="hashmap" resultType="Member">
		SELECT MEM_NO as memNo,
				MEM_PWD as memPwd,
				MEM_POSITION as memPosition,
				DEPT_CODE as deptCode,
				MEM_NAME as memName,
				MEM_BIRTH as memBirth,
				MEM_GENDER as memGender,
				MEM_ADDRESS as memAddress,
				MEM_PHONE as memPhone,
				MEM_TELL as memTell,
				MEM_EMAIL as memEmail,
				MEM_PROFILE as memProfile,
				MEM_HOLIDAY_COUNT as memHolidayCount,
				MEM_JOIN_DATE as memJoinDate,
				MEM_RESIGN_YN as memResignYN,
				MEM_RESIGN_DATE as memResigndate,
				MEM_DEL_YN as memDelYN,
				MEM_DEL_DATE as memDelDate,
				MEM_RIGHT_CODE as memRightCode,
                DEPT_NAME as deptName
		FROM (SELECT ROW_NUMBER()OVER(ORDER BY m.MEM_JOIN_DATE DESC) AS RNUM, m.*,d.DEPT_NAME FROM MEMBER m LEFT JOIN DEPARTMENT d ON(m.DEPT_CODE=d.DEPT_CODE)) 
		WHERE MEM_DEL_YN='N' AND MEM_RESIGN_YN='N' AND RNUM BETWEEN ${start} AND ${end}
		
	</select>
	
	<!-- BY 다빈 - 관리자탭(인사관리) - 사원 등록 / 사번 채번 -->
	<select id="choiceMemberNo" resultType="int">
		SELECT TO_CHAR(SYSDATE,'YYMM')||LPAD(MEMBER_SEQ.NEXTVAL,3,0) FROM DUAL
	</select>
	<!-- BY 다빈 - 관리자탭(인사관리) - 사원 등록 / insert-->
	<insert id="signUpMember" parameterType="Member">
		INSERT INTO MEMBER VALUES(${memNo},'03AC674216F3E15C761EE1A5E255F067953623C8B388B4459E13F978D7C846F4',#{memPosition},#{deptCode},#{memName},#{memBirth},#{memGender},#{memPhone},NULL,NULL,#{memProfile},DEFAULT,DEFAULT,DEFAULT,NULL,DEFAULT,NULL,NULL,#{memAddress})
	</insert>
	<!-- BY 다빈 - 관리자탭(인사관리) - 사원 등록 / 학력 insert-->
	<insert id="insertAcademicAbility" parameterType="java.util.List">
		<foreach collection="list" item="item" open="INSERT ALL" close="SELECT * FROM SYS.DUAL" separator=" "> 
		INTO ACADEMIC_ABILITY(MEM_NO,ACA_ENROLL_DATE,ACA_GRAD_DATE,ACA_SCHOOL_NAME,ACA_MAJOR_NAME,ACA_GRAD)
		VALUES (
			#{item.memNo},
		<choose>
			<when test="item.acaEnrollDate != null">#{item.acaEnrollDate},</when>
			<otherwise>NULL,</otherwise>
		</choose>
		<choose>
			<when test="item.acaGradDate != null">#{item.acaGradDate},</when>
			<otherwise>NULL,</otherwise>
		</choose>
			#{item.acaSchoolName},
			#{item.acaMajorName},
			#{item.acaGrad}
		)
		</foreach>
	</insert> 
	<!-- BY 다빈 - 관리자탭(인사관리) - 사원 등록 / 자격증 insert-->
	<insert id="insertLicense" parameterType="java.util.List">
		<foreach collection="list" item="item" open="INSERT ALL" close="SELECT * FROM SYS.DUAL" separator=" "> 
		INTO LICENSE(MEM_NO,LIC_DATE,LIC_NAME,LIC_ORIGIN)
		VALUES (
			#{item.memNo},
		<choose>
			<when test="item.licDate != null">#{item.licDate},</when>
			<otherwise>NULL,</otherwise>
		</choose>
			#{item.licName},
			#{item.licOrigin}
		)
		</foreach>
	</insert> 
	<!-- BY 다빈 - 관리자탭(인사관리) - 사원 등록 / 경력 insert-->
	<insert id="insertCareer" parameterType="java.util.List">
		<foreach collection="list" item="item" open="INSERT ALL" close="SELECT * FROM SYS.DUAL" separator=" "> 
		INTO CAREER(MEM_NO,CAR_JOIN_DATE,CAR_RESIGN_DATE,CAR_PLACE,CAR_POSITION,CAR_CONTENT)
		VALUES (
			#{item.memNo},
		<choose>
			<when test="item.carJoinDate != null">#{item.carJoinDate},</when>
			<otherwise>NULL,</otherwise>
		</choose>
		<choose>
			<when test="item.carResignDate != null">#{item.carResignDate},</when>
			<otherwise>NULL,</otherwise>
		</choose>
			#{item.carPlace},
			#{item.carPosition},
			#{item.carContent}
		)
		</foreach>
	</insert> 
	<!-- BY 다빈 - 관리자탭(인사관리) - 사원 등록 / 병력 insert-->
	<insert id="insertMilitary" parameterType="Military">
		INSERT INTO MILITARY 
		VALUES(
			${memNo},
			#{milServiceType},
		<choose>
			<when test="milJoinDate != null">#{milJoinDate},</when>
			<otherwise>NULL,</otherwise>
		</choose>
		<choose>
			<when test="milLeaveDate != null">#{milLeaveDate},</when>
			<otherwise>NULL,</otherwise>
		</choose>
			#{milReason}
		)
	</insert>
	<!-- BY 다빈 - 관리자탭(인사관리) - 조직도 select -->
	<select id="selectDeptList" resultType="Member">
		SELECT d.DEPT_CODE AS deptCode, d.DEPT_NAME AS deptName, m.MEM_NO AS memNo, m.MEM_NAME AS memName, m.MEM_POSITION AS memPosition FROM (select * from DEPARTMENT WHERE DEPT_DEL_YN='N') d FULL JOIN (SELECT * FROM MEMBER WHERE MEM_DEL_YN='N' AND MEM_RESIGN_YN='N') m ON(d.DEPT_CODE=m.DEPT_CODE) ORDER BY d.DEPT_NAME
	</select>
	<!-- BY 다빈 - 관리자탭(인사관리) - 조직도 부서 이동 update -->
	<update id="changePosition" parameterType="hashmap">
		UPDATE MEMBER SET DEPT_CODE=#{deptCode} 
		<foreach collection="memNo" item="item" index="i" open="WHERE" separator="OR">
		 MEM_NO=#{item}
		</foreach>
	</update>
	<!-- BY 다빈 - 관리자탭(인사관리) - 조직도 부서 추가 insert -->
	<insert id="addDepartment" parameterType="hashmap">
		INSERT INTO DEPARTMENT VALUES(#{deptCode},#{deptName},'N')
	</insert>
	<!-- BY 다빈 - 관리자탭(인사관리) - 조직도 부서 이름 수정 update -->
	<update id="modifyDepartment" parameterType="hashmap">
		UPDATE DEPARTMENT SET DEPT_NAME=#{deptName} WHERE DEPT_CODE=#{deptCode} AND DEPT_DEL_YN='N'
	</update>
	<!-- BY 다빈 - 관리자탭(인사관리) - 조직도 부서 삭제 update -->
	<update id="deleteDepartment" parameterType="String">
		UPDATE DEPARTMENT SET DEPT_DEL_YN='Y' WHERE DEPT_CODE=#{deptCode}
	</update>
</mapper>
